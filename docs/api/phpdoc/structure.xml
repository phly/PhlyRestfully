<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="PhlyRestfully">
  <file path="ResourceInterface.php" hash="4cf71e21351913de270955dc70c4fbd0" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <interface namespace="PhlyRestfully" line="16" package="Default">
      <name>ResourceInterface</name>
      <full_name>\PhlyRestfully\ResourceInterface</full_name>
      <extends>\Zend\EventManager\EventManagerAwareInterface</extends>
      <docblock line="13">
        <description>Interface describing operations for a given resource.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="25" package="Default">
        <name>setEventParams</name>
        <full_name>setEventParams</full_name>
        <docblock line="18">
          <description>Set the event parameters</description>
          <long-description></long-description>
          <tag line="18" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="18" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="32" package="Default">
        <name>getEventParams</name>
        <full_name>getEventParams</full_name>
        <docblock line="27">
          <description>Get the event parameters</description>
          <long-description></long-description>
          <tag line="27" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="40" package="Default">
        <name>setEventParam</name>
        <full_name>setEventParam</full_name>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="34" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="48" package="Default">
        <name>getEventParam</name>
        <full_name>getEventParam</full_name>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag line="42" name="param" description="" type="mixed" variable="$name">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="42" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="42" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="56" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="50">
          <description>Create a record in the resource</description>
          <long-description></long-description>
          <tag line="50" name="param" description="" type="array|object" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="50" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="65" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="58">
          <description>Update (replace) an existing record</description>
          <long-description></long-description>
          <tag line="58" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="58" name="param" description="" type="array|object" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="58" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="73" package="Default">
        <name>replaceList</name>
        <full_name>replaceList</full_name>
        <docblock line="67">
          <description>Update (replace) an existing collection of records</description>
          <long-description></long-description>
          <tag line="67" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="67" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="82" package="Default">
        <name>patch</name>
        <full_name>patch</full_name>
        <docblock line="75">
          <description>Partial update of an existing record</description>
          <long-description></long-description>
          <tag line="75" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="75" name="param" description="" type="array|object" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="75" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="90" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="84">
          <description>Delete an existing record</description>
          <long-description></long-description>
          <tag line="84" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="84" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="98" package="Default">
        <name>deleteList</name>
        <full_name>deleteList</full_name>
        <docblock line="92">
          <description>Delete an existing collection of records</description>
          <long-description></long-description>
          <tag line="92" name="param" description="" type="null|array" variable="$data">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="92" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="106" package="Default">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="100">
          <description>Fetch an existing record</description>
          <long-description></long-description>
          <tag line="100" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="100" name="return" description="" type="false|array|object">
            <type by_reference="false">false</type>
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="113" package="Default">
        <name>fetchAll</name>
        <full_name>fetchAll</full_name>
        <docblock line="108">
          <description>Fetch a collection of records</description>
          <long-description></long-description>
          <tag line="108" name="return" description="" type="\Zend\Paginator\Paginator">
            <type by_reference="false">\Zend\Paginator\Paginator</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <critical line="2" code="50008">No short description for file ResourceInterface.php</critical>
      <error line="34" code="50012">No short description for method setEventParam()</error>
      <error line="42" code="50012">No short description for method getEventParam()</error>
    </parse_markers>
  </file>
  <file path="ApiProblem.php" hash="24fbbd2a67a3a60d1a252af8f27472e1" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="14" package="Default">
      <extends/>
      <name>ApiProblem</name>
      <full_name>\PhlyRestfully\ApiProblem</full_name>
      <docblock line="11">
        <description>Object describing an API-Problem payload</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="131" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="118">
          <description>Constructor</description>
          <long-description>&lt;p&gt;Create an instance using the provided information. If nothing is
provided for the describedBy field, the class default will be used;
if the httpStatus matches any known, the title field will be selected
from $problemStatusTitles as a result.&lt;/p&gt;</long-description>
          <tag line="118" name="param" description="" type="int" variable="$httpStatus">
            <type by_reference="false">int</type>
          </tag>
          <tag line="118" name="param" description="" type="string" variable="$detail">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="" type="string" variable="$describedBy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$httpStatus</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$detail</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$describedBy</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="131">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="131">
          <name>$additional</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="160" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="154">
          <description>Retrieve properties</description>
          <long-description></long-description>
          <tag line="154" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="154" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="187" package="Default">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="182">
          <description>Cast to an array</description>
          <long-description></long-description>
          <tag line="182" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="206" package="Default">
        <name>setDetailIncludesStackTrace</name>
        <full_name>setDetailIncludesStackTrace</full_name>
        <docblock line="199">
          <description>Set the flag indicating whether an exception detail should include a
stack trace and previous exception information.</description>
          <long-description></long-description>
          <tag line="199" name="param" description="" type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="199" name="return" description="" type="\PhlyRestfully\ApiProblem">
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$flag</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file ApiProblem.php</critical>
      <error line="118" code="50015">Argument $additional is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="MetadataMap.php" hash="274c17e4f27d127544566ea25c55940e" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="11" package="Default">
      <extends/>
      <name>MetadataMap</name>
      <full_name>\PhlyRestfully\MetadataMap</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="25" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="18">
          <description>Constructor</description>
          <long-description>&lt;p&gt;If provided, will pass $map to setMap().&lt;/p&gt;</long-description>
          <tag line="18" name="param" description="" type="null|array" variable="$map">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$map</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="42" package="Default">
        <name>setMap</name>
        <full_name>setMap</full_name>
        <docblock line="32">
          <description>Set the metadata map</description>
          <long-description>&lt;p&gt;Accepts an array of class =&gt; metadata definitions.
Each definition may be an instance of Metadata, or an array
of options used to define a Metadata instance.&lt;/p&gt;</long-description>
          <tag line="32" name="param" description="" type="array" variable="$map">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$map</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="70" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="64">
          <description>Does the map contain metadata for the given class?</description>
          <long-description></long-description>
          <tag line="64" name="param" description="Object or class name to test" type="object|string" variable="$class">
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="84" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="78">
          <description>Retrieve the metadata for a given class</description>
          <long-description></long-description>
          <tag line="78" name="param" description="Object or classname for which to retrieve metadata" type="object|string" variable="$class">
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="" type="\PhlyRestfully\Metadata">
            <type by_reference="false">\PhlyRestfully\Metadata</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file MetadataMap.php</critical>
      <error line="11" code="50000">No DocBlock was found for \PhlyRestfully\MetadataMap</error>
      <critical line="13" code="50019">No short description for property $map</critical>
    </parse_markers>
  </file>
  <file path="Resource.php" hash="85d2b13e490e922be1f5771731df692c" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="23" package="Default">
      <extends/>
      <implements>\PhlyRestfully\ResourceInterface</implements>
      <name>Resource</name>
      <full_name>\PhlyRestfully\Resource</full_name>
      <docblock line="17">
        <description>Base resource class</description>
        <long-description>&lt;p&gt;Essentially, simply marshalls arguments and triggers events; it is useless
without listeners to do the actual work.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="49" package="Default">
        <name>setEventParams</name>
        <full_name>setEventParams</full_name>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="58" package="Default">
        <name>getEventParams</name>
        <full_name>getEventParams</full_name>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag line="55" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="67" package="Default">
        <name>setQueryParams</name>
        <full_name>setQueryParams</full_name>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag line="63" name="param" description="" type="\Zend\Stdlib\Parameters" variable="$params">
            <type by_reference="false">\Zend\Stdlib\Parameters</type>
          </tag>
          <tag line="63" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$params</name>
          <default></default>
          <type>\Zend\Stdlib\Parameters</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="76" package="Default">
        <name>getQueryParams</name>
        <full_name>getQueryParams</full_name>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
          <tag line="73" name="return" description="" type="null|\Zend\Stdlib\Parameters">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend\Stdlib\Parameters</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="85" package="Default">
        <name>setRouteMatch</name>
        <full_name>setRouteMatch</full_name>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
          <tag line="81" name="param" description="" type="\Zend\Mvc\Router\RouteMatch" variable="$matches">
            <type by_reference="false">\Zend\Mvc\Router\RouteMatch</type>
          </tag>
          <tag line="81" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$matches</name>
          <default></default>
          <type>\Zend\Mvc\Router\RouteMatch</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="94" package="Default">
        <name>getRouteMatch</name>
        <full_name>getRouteMatch</full_name>
        <docblock line="91">
          <description></description>
          <long-description></long-description>
          <tag line="91" name="return" description="" type="null|\Zend\Mvc\Router\RouteMatch">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend\Mvc\Router\RouteMatch</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="105" package="Default">
        <name>setEventParam</name>
        <full_name>setEventParam</full_name>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
          <tag line="99" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="99" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="105">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="117" package="Default">
        <name>getEventParam</name>
        <full_name>getEventParam</full_name>
        <docblock line="111">
          <description></description>
          <long-description></long-description>
          <tag line="111" name="param" description="" type="mixed" variable="$name">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="111" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="111" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="136" package="Default">
        <name>setEventManager</name>
        <full_name>setEventManager</full_name>
        <docblock line="127">
          <description>Set event manager instance</description>
          <long-description>&lt;p&gt;Sets the event manager identifiers to the current class, this class, and
the resource interface.&lt;/p&gt;</long-description>
          <tag line="127" name="param" description="" type="\Zend\EventManager\EventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
          <tag line="127" name="return" description="" type="Resource">
            <type by_reference="false">Resource</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\EventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="154" package="Default">
        <name>getEventManager</name>
        <full_name>getEventManager</full_name>
        <docblock line="147">
          <description>Retrieve event manager</description>
          <long-description>&lt;p&gt;Lazy-instantiates an EM instance if none provided.&lt;/p&gt;</long-description>
          <tag line="147" name="return" description="" type="\Zend\EventManager\EventManagerInterface">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="177" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="162">
          <description>Create a record in the resource</description>
          <long-description>&lt;p&gt;Expects either an array or object representing the item to create. If
a non-array, non-object is provided, raises an exception.&lt;/p&gt;

&lt;p&gt;The value returned by the last listener to the "create" event will be
returned as long as it is an array or object; otherwise, the original
$data is returned. If you wish to indicate failure to create, raise a
PhlyRestfully\Exception\CreationException from a listener.&lt;/p&gt;</long-description>
          <tag line="162" name="param" description="" type="array|object" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="162" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="162" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="177">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="216" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="199">
          <description>Update (replace) an existing item</description>
          <long-description>&lt;p&gt;Updates the item indicated by $id, replacing it with the information
in $data. $data should be a full representation of the item, and should
be an array or object; if otherwise, an exception will be raised.&lt;/p&gt;

&lt;p&gt;Like create(), the return value of the last executed listener will be
returned, as long as it is an array or object; otherwise, $data is
returned. If you wish to indicate failure to update, raise a
PhlyRestfully\Exception\UpdateException.&lt;/p&gt;</long-description>
          <tag line="199" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="199" name="param" description="" type="array|object" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="199" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="199" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="216">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="254" package="Default">
        <name>replaceList</name>
        <full_name>replaceList</full_name>
        <docblock line="238">
          <description>Update (replace) an existing collection of items</description>
          <long-description>&lt;p&gt;Replaces the collection with  the items contained in $data.
$data should be a multidimensional array or array of objects; if
otherwise, an exception will be raised.&lt;/p&gt;

&lt;p&gt;Like update(), the return value of the last executed listener will be
returned, as long as it is an array or object; otherwise, $data is
returned. If you wish to indicate failure to update, raise a
PhlyRestfully\Exception\UpdateException.&lt;/p&gt;</long-description>
          <tag line="238" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="238" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="238" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="303" package="Default">
        <name>patch</name>
        <full_name>patch</full_name>
        <docblock line="285">
          <description>Partial update of an existing item</description>
          <long-description>&lt;p&gt;Update the item indicated by $id, using the information from $data;
$data should be merged with the existing item in order to provide a
partial update. Additionally, $data should be an array or object; any
other value will raise an exception.&lt;/p&gt;

&lt;p&gt;Like create(), the return value of the last executed listener will be
returned, as long as it is an array or object; otherwise, $data is
returned. If you wish to indicate failure to update, raise a
PhlyRestfully\Exception\PatchException.&lt;/p&gt;</long-description>
          <tag line="285" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="285" name="param" description="" type="array|object" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="285" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="285" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="303">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="335" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="325">
          <description>Delete an existing item</description>
          <long-description>&lt;p&gt;Use to delete the item indicated by $id. The value returned by the last
listener will be used, as long as it is a boolean; otherwise, a boolean
false will be returned, indicating failure to delete.&lt;/p&gt;</long-description>
          <tag line="325" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="325" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="353" package="Default">
        <name>deleteList</name>
        <full_name>deleteList</full_name>
        <docblock line="347">
          <description>Delete an existing collection of records</description>
          <long-description></long-description>
          <tag line="347" name="param" description="" type="null|array" variable="$data">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="347" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="353">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="385" package="Default">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="374">
          <description>Fetch an existing item</description>
          <long-description>&lt;p&gt;Retrieve an existing item indicated by $id. The value of the last
listener will be returned, as long as it is an array or object;
otherwise, a boolean false value will be returned, indicating a
lookup failure.&lt;/p&gt;</long-description>
          <tag line="374" name="param" description="" type="string|int" variable="$id">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="374" name="return" description="" type="false|array|object">
            <type by_reference="false">false</type>
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="385">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="410" package="Default">
        <name>fetchAll</name>
        <full_name>fetchAll</full_name>
        <docblock line="397">
          <description>Fetch a collection of items</description>
          <long-description>&lt;p&gt;Use to retrieve a collection of items. The value of the last
listener will be returned, as long as it is an array or Traversable;
otherwise, an empty array will be returned.&lt;/p&gt;

&lt;p&gt;The recommendation is to return a \Zend\Paginator\Paginator instance,
which will allow performing paginated sets, and thus allow the view
layer to select the current page based on the query string or route.&lt;/p&gt;</long-description>
          <tag line="397" name="return" description="" type="array|\Traversable">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Resource.php</critical>
      <critical line="25" code="50019">No short description for property $events</critical>
      <critical line="30" code="50019">No short description for property $params</critical>
      <critical line="35" code="50019">No short description for property $queryParams</critical>
      <critical line="40" code="50019">No short description for property $routeMatch</critical>
      <error line="45" code="50012">No short description for method setEventParams()</error>
      <error line="55" code="50012">No short description for method getEventParams()</error>
      <error line="63" code="50012">No short description for method setQueryParams()</error>
      <error line="73" code="50012">No short description for method getQueryParams()</error>
      <error line="81" code="50012">No short description for method setRouteMatch()</error>
      <error line="91" code="50012">No short description for method getRouteMatch()</error>
      <error line="99" code="50012">No short description for method setEventParam()</error>
      <error line="111" code="50012">No short description for method getEventParam()</error>
      <error line="427" code="50014">Name of argument $name does not match with the DocBlock's name $args in prepareEvent()</error>
      <error line="427" code="50015">Argument $args is missing from the Docblock of prepareEvent()</error>
    </parse_markers>
  </file>
  <file path="Exception/UpdateException.php" hash="6d71d42f0e63f79d392b20e3434e06eb" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="15" package="Default">
      <extends>\PhlyRestfully\Exception\DomainException</extends>
      <name>UpdateException</name>
      <full_name>\PhlyRestfully\Exception\UpdateException</full_name>
      <docblock line="11">
        <description>Throw this exception from a "update" resource listener in order to indicate
an inability to update an item and automatically report it.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/UpdateException.php</critical>
    </parse_markers>
  </file>
  <file path="Exception/PatchException.php" hash="d35da83dac4afb01cac1abb3e5a45edb" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="15" package="Default">
      <extends>\PhlyRestfully\Exception\DomainException</extends>
      <name>PatchException</name>
      <full_name>\PhlyRestfully\Exception\PatchException</full_name>
      <docblock line="11">
        <description>Throw this exception from a "patch" resource listener in order to indicate
an inability to patch an item and automatically report it.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/PatchException.php</critical>
    </parse_markers>
  </file>
  <file path="Exception/DomainException.php" hash="a17464a53e8cac138bb9370042d993b0" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="11" package="Default">
      <extends>\DomainException</extends>
      <implements>\PhlyRestfully\Exception\ExceptionInterface</implements>
      <implements>\PhlyRestfully\Exception\ProblemExceptionInterface</implements>
      <name>DomainException</name>
      <full_name>\PhlyRestfully\Exception\DomainException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="34" package="Default">
        <name>setAdditionalDetails</name>
        <full_name>setAdditionalDetails</full_name>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag line="30" name="param" description="" type="array" variable="$details">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$details</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="44" package="Default">
        <name>setDescribedBy</name>
        <full_name>setDescribedBy</full_name>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="54" package="Default">
        <name>setTitle</name>
        <full_name>setTitle</full_name>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag line="50" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$title</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="63" package="Default">
        <name>getAdditionalDetails</name>
        <full_name>getAdditionalDetails</full_name>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag line="60" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="71" package="Default">
        <name>getDescribedBy</name>
        <full_name>getDescribedBy</full_name>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
          <tag line="68" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="79" package="Default">
        <name>getTitle</name>
        <full_name>getTitle</full_name>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
          <tag line="76" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/DomainException.php</critical>
      <error line="11" code="50000">No DocBlock was found for \PhlyRestfully\Exception\DomainException</error>
      <critical line="15" code="50019">No short description for property $describedBy</critical>
      <critical line="20" code="50019">No short description for property $details</critical>
      <critical line="25" code="50019">No short description for property $title</critical>
      <error line="30" code="50012">No short description for method setAdditionalDetails()</error>
      <error line="40" code="50012">No short description for method setDescribedBy()</error>
      <error line="50" code="50012">No short description for method setTitle()</error>
      <error line="60" code="50012">No short description for method getAdditionalDetails()</error>
      <error line="68" code="50012">No short description for method getDescribedBy()</error>
      <error line="76" code="50012">No short description for method getTitle()</error>
    </parse_markers>
  </file>
  <file path="Exception/InvalidResourceException.php" hash="07f14441463aa7f9bae7b07247400efc" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="11" package="Default">
      <extends>\PhlyRestfully\Exception\InvalidArgumentException</extends>
      <name>InvalidResourceException</name>
      <full_name>\PhlyRestfully\Exception\InvalidResourceException</full_name>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/InvalidResourceException.php</critical>
      <error line="11" code="50000">No DocBlock was found for \PhlyRestfully\Exception\InvalidResourceException</error>
    </parse_markers>
  </file>
  <file path="Exception/InvalidArgumentException.php" hash="fbcb0a0009b6d1c47e3cb4075a368b70" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="11" package="Default">
      <extends>\InvalidArgumentException</extends>
      <implements>\PhlyRestfully\Exception\ExceptionInterface</implements>
      <name>InvalidArgumentException</name>
      <full_name>\PhlyRestfully\Exception\InvalidArgumentException</full_name>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/InvalidArgumentException.php</critical>
      <error line="11" code="50000">No DocBlock was found for \PhlyRestfully\Exception\InvalidArgumentException</error>
    </parse_markers>
  </file>
  <file path="Exception/ProblemExceptionInterface.php" hash="0f1d76709969989435d4ce2f89cdb05f" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <interface namespace="PhlyRestfully\Exception" line="14" package="Default">
      <name>ProblemExceptionInterface</name>
      <full_name>\PhlyRestfully\Exception\ProblemExceptionInterface</full_name>
      <docblock line="11">
        <description>Interface for exceptions that can provide additional API Problem details</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="16" package="Default">
        <name>getAdditionalDetails</name>
        <full_name>getAdditionalDetails</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="17" package="Default">
        <name>getDescribedBy</name>
        <full_name>getDescribedBy</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Exception" line="18" package="Default">
        <name>getTitle</name>
        <full_name>getTitle</full_name>
      </method>
    </interface>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/ProblemExceptionInterface.php</critical>
      <error line="16" code="50010">No DocBlock was found for method getAdditionalDetails()</error>
      <error line="17" code="50010">No DocBlock was found for method getDescribedBy()</error>
      <error line="18" code="50010">No DocBlock was found for method getTitle()</error>
    </parse_markers>
  </file>
  <file path="Exception/ExceptionInterface.php" hash="32a97fac71cbc1d1876bd026df5109a1" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <interface namespace="PhlyRestfully\Exception" line="14" package="Default">
      <name>ExceptionInterface</name>
      <full_name>\PhlyRestfully\Exception\ExceptionInterface</full_name>
      <docblock line="11">
        <description>Marker interface; catch this to catch any module-specific exception.</description>
        <long-description></long-description>
      </docblock>
    </interface>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/ExceptionInterface.php</critical>
    </parse_markers>
  </file>
  <file path="Exception/RuntimeException.php" hash="d47c4e87af77c345e72d6eaaa89f4ebd" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="11" package="Default">
      <extends>\RuntimeException</extends>
      <implements>\PhlyRestfully\Exception\ExceptionInterface</implements>
      <name>RuntimeException</name>
      <full_name>\PhlyRestfully\Exception\RuntimeException</full_name>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/RuntimeException.php</critical>
      <error line="11" code="50000">No DocBlock was found for \PhlyRestfully\Exception\RuntimeException</error>
    </parse_markers>
  </file>
  <file path="Exception/CreationException.php" hash="8b0ed545c56f07d3544abe4c2613694d" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="15" package="Default">
      <extends>\PhlyRestfully\Exception\DomainException</extends>
      <name>CreationException</name>
      <full_name>\PhlyRestfully\Exception\CreationException</full_name>
      <docblock line="11">
        <description>Throw this exception from a "create" resource listener in order to indicate
an inability to create an item and automatically report it.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/CreationException.php</critical>
    </parse_markers>
  </file>
  <file path="Exception/InvalidCollectionException.php" hash="ebc4e942154feb3f1464c79c8b6f7991" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Exception" line="11" package="Default">
      <extends>\PhlyRestfully\Exception\InvalidArgumentException</extends>
      <name>InvalidCollectionException</name>
      <full_name>\PhlyRestfully\Exception\InvalidCollectionException</full_name>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Exception/InvalidCollectionException.php</critical>
      <error line="11" code="50000">No DocBlock was found for \PhlyRestfully\Exception\InvalidCollectionException</error>
    </parse_markers>
  </file>
  <file path="Metadata.php" hash="99334055fa712969d4fed758f00f0e07" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="13" package="Default">
      <extends/>
      <name>Metadata</name>
      <full_name>\PhlyRestfully\Metadata</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="91" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="78">
          <description>Constructor</description>
          <long-description>&lt;p&gt;Sets the class, and passes any options provided to the appropriate
setter methods, after first converting them to lowercase and stripping
underscores.&lt;/p&gt;

&lt;p&gt;If the class does not exist, raises an exception.&lt;/p&gt;</long-description>
          <tag line="78" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="122" package="Default">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <docblock line="117">
          <description>Retrieve the class this metadata is associated with</description>
          <long-description></long-description>
          <tag line="117" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="132" package="Default">
        <name>getHydrator</name>
        <full_name>getHydrator</full_name>
        <docblock line="127">
          <description>Retrieve the hydrator to associate with this class, if any</description>
          <long-description></long-description>
          <tag line="127" name="return" description="" type="null|\Zend\Stdlib\Hydrator\HydratorInterface">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend\Stdlib\Hydrator\HydratorInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="142" package="Default">
        <name>getIdentifierName</name>
        <full_name>getIdentifierName</full_name>
        <docblock line="137">
          <description>Retrieve the identifier name</description>
          <long-description></long-description>
          <tag line="137" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="154" package="Default">
        <name>getResourceRoute</name>
        <full_name>getResourceRoute</full_name>
        <docblock line="147">
          <description>Retrieve the resource route</description>
          <long-description>&lt;p&gt;If not set, uses the route or url, depending on which is present.&lt;/p&gt;</long-description>
          <tag line="147" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="171" package="Default">
        <name>getRoute</name>
        <full_name>getRoute</full_name>
        <docblock line="166">
          <description>Retrieve the route to use for URL generation</description>
          <long-description></long-description>
          <tag line="166" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="181" package="Default">
        <name>getRouteOptions</name>
        <full_name>getRouteOptions</full_name>
        <docblock line="176">
          <description>Retrieve an route options to use in URL generation</description>
          <long-description></long-description>
          <tag line="176" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="191" package="Default">
        <name>getRouteParams</name>
        <full_name>getRouteParams</full_name>
        <docblock line="186">
          <description>Retrieve any route parameters to use in URL generation</description>
          <long-description></long-description>
          <tag line="186" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="201" package="Default">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="196">
          <description>Retrieve the URL to use for this resource, if present</description>
          <long-description></long-description>
          <tag line="196" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="211" package="Default">
        <name>hasHydrator</name>
        <full_name>hasHydrator</full_name>
        <docblock line="206">
          <description>Is a hydrator associated with this class?</description>
          <long-description></long-description>
          <tag line="206" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="221" package="Default">
        <name>hasRoute</name>
        <full_name>hasRoute</full_name>
        <docblock line="216">
          <description>Is a route present for this class?</description>
          <long-description></long-description>
          <tag line="216" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="231" package="Default">
        <name>hasUrl</name>
        <full_name>hasUrl</full_name>
        <docblock line="226">
          <description>Is a URL set for this class?</description>
          <long-description></long-description>
          <tag line="226" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="241" package="Default">
        <name>isCollection</name>
        <full_name>isCollection</full_name>
        <docblock line="236">
          <description>Does this class represent a collection?</description>
          <long-description></long-description>
          <tag line="236" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="253" package="Default">
        <name>setHydrator</name>
        <full_name>setHydrator</full_name>
        <docblock line="246">
          <description>Set the hydrator to use with this class</description>
          <long-description></long-description>
          <tag line="246" name="param" description="" type="string|\Zend\Stdlib\Hydrator\HydratorInterface" variable="$hydrator">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend\Stdlib\Hydrator\HydratorInterface</type>
          </tag>
          <tag line="246" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
          <tag line="246" name="throws" description="if the class or hydrator does not implement HydratorInterface" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$hydrator</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="280" package="Default">
        <name>setIdentifierName</name>
        <full_name>setIdentifierName</full_name>
        <docblock line="274">
          <description>Set the identifier name</description>
          <long-description></long-description>
          <tag line="274" name="param" description="" type="string|mixed" variable="$identifier">
            <type by_reference="false">string</type>
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="274" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="292" package="Default">
        <name>setIsCollection</name>
        <full_name>setIsCollection</full_name>
        <docblock line="286">
          <description>Set the flag indicating collection status</description>
          <long-description></long-description>
          <tag line="286" name="param" description="" type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="286" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="292">
          <name>$flag</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="304" package="Default">
        <name>setResourceRoute</name>
        <full_name>setResourceRoute</full_name>
        <docblock line="298">
          <description>Set the resource route (for embedded resources in collections)</description>
          <long-description></long-description>
          <tag line="298" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="298" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="316" package="Default">
        <name>setRoute</name>
        <full_name>setRoute</full_name>
        <docblock line="310">
          <description>Set the route for URL generation</description>
          <long-description></long-description>
          <tag line="310" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="310" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="328" package="Default">
        <name>setRouteOptions</name>
        <full_name>setRouteOptions</full_name>
        <docblock line="322">
          <description>Set route options for URL generation</description>
          <long-description></long-description>
          <tag line="322" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="322" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="340" package="Default">
        <name>setRouteParams</name>
        <full_name>setRouteParams</full_name>
        <docblock line="334">
          <description>Set route parameters for URL generation</description>
          <long-description></long-description>
          <tag line="334" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="352" package="Default">
        <name>setUrl</name>
        <full_name>setUrl</full_name>
        <docblock line="346">
          <description>Set the URL to use with this resource</description>
          <long-description></long-description>
          <tag line="346" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="352">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Metadata.php</critical>
      <error line="13" code="50000">No DocBlock was found for \PhlyRestfully\Metadata</error>
    </parse_markers>
  </file>
  <file path="LinkCollection.php" hash="bdd38da96aebfb9176d2ecb15f9dc16c" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="18" package="Default">
      <extends/>
      <implements>\Countable</implements>
      <implements>\IteratorAggregate</implements>
      <name>LinkCollection</name>
      <full_name>\PhlyRestfully\LinkCollection</full_name>
      <docblock line="15">
        <description>Object describing a collection of link relations</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="30" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="25">
          <description>Return a count of link relations</description>
          <long-description></long-description>
          <tag line="25" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="40" package="Default">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="35">
          <description>Retrieve internal iterator</description>
          <long-description></long-description>
          <tag line="35" name="return" description="" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="52" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="45">
          <description>Add a link</description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="\PhlyRestfully\Link" variable="$link">
            <type by_reference="false">\PhlyRestfully\Link</type>
          </tag>
          <tag line="45" name="param" description="" type="bool" variable="$overwrite">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="45" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$link</name>
          <default></default>
          <type>\PhlyRestfully\Link</type>
        </argument>
        <argument line="52">
          <name>$overwrite</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="83" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="77">
          <description>Retrieve a link relation</description>
          <long-description></long-description>
          <tag line="77" name="param" description="" type="string" variable="$relation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="\PhlyRestfully\Link|array">
            <type by_reference="false">\PhlyRestfully\Link</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$relation</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="97" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="91">
          <description>Does a given link relation exist?</description>
          <long-description></long-description>
          <tag line="91" name="param" description="" type="string" variable="$relation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$relation</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="108" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="102">
          <description>Remove a given link relation</description>
          <long-description></long-description>
          <tag line="102" name="param" description="" type="string" variable="$relation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$relation</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file LinkCollection.php</critical>
      <critical line="20" code="50019">No short description for property $links</critical>
    </parse_markers>
  </file>
  <file path="Factory/ResourceControllerFactory.php" hash="ee003775bfee3bba210afd8f2512eb04" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Factory" line="23" package="PhlyRestfully\Factory">
      <extends/>
      <implements>\Zend\ServiceManager\AbstractFactoryInterface</implements>
      <name>ResourceControllerFactory</name>
      <full_name>\PhlyRestfully\Factory\ResourceControllerFactory</full_name>
      <docblock line="19">
        <description>Class ResourceControllerFactory</description>
        <long-description></long-description>
        <tag line="19" name="package" description="PhlyRestfully\Factory"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Factory" line="33" package="PhlyRestfully\Factory">
        <name>canCreateServiceWithName</name>
        <full_name>canCreateServiceWithName</full_name>
        <docblock line="25">
          <description>Determine if we can create a service with name</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="\Zend\ServiceManager\ServiceLocatorInterface" variable="$controllers">
            <type by_reference="false">\Zend\ServiceManager\ServiceLocatorInterface</type>
          </tag>
          <tag line="25" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="param" description="" type="string" variable="$requestedName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$controllers</name>
          <default></default>
          <type>\Zend\ServiceManager\ServiceLocatorInterface</type>
        </argument>
        <argument line="33">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$requestedName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Factory" line="82" package="PhlyRestfully\Factory">
        <name>createServiceWithName</name>
        <full_name>createServiceWithName</full_name>
        <docblock line="73">
          <description>Create service with name</description>
          <long-description></long-description>
          <tag line="73" name="param" description="" type="\Zend\ServiceManager\ServiceLocatorInterface" variable="$controllers">
            <type by_reference="false">\Zend\ServiceManager\ServiceLocatorInterface</type>
          </tag>
          <tag line="73" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="" type="string" variable="$requestedName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="return" description="" type="\PhlyRestfully\ResourceController">
            <type by_reference="false">\PhlyRestfully\ResourceController</type>
          </tag>
          <tag line="73" name="throws" description="if listener specified is not a ListenerAggregate" type="\Zend\ServiceManager\Exception\ServiceNotCreatedException">
            <type by_reference="false">\Zend\ServiceManager\Exception\ServiceNotCreatedException</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$controllers</name>
          <default></default>
          <type>\Zend\ServiceManager\ServiceLocatorInterface</type>
        </argument>
        <argument line="82">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$requestedName</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Factory/ResourceControllerFactory.php</critical>
    </parse_markers>
  </file>
  <file path="View/RestfulJsonModel.php" hash="32ca8e67d0bf1a8194bb6e87d346f1e3" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\View" line="20" package="Default">
      <extends>\Zend\View\Model\JsonModel</extends>
      <name>RestfulJsonModel</name>
      <full_name>\PhlyRestfully\View\RestfulJsonModel</full_name>
      <docblock line="16">
        <description>Simple extension to facilitate the specialized JsonStrategy and JsonRenderer
in this Module.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="27" package="Default">
        <name>isApiProblem</name>
        <full_name>isApiProblem</full_name>
        <docblock line="22">
          <description>Does the payload represent an API-Problem?</description>
          <long-description></long-description>
          <tag line="22" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="38" package="Default">
        <name>isHalCollection</name>
        <full_name>isHalCollection</full_name>
        <docblock line="33">
          <description>Does the payload represent a HAL collection?</description>
          <long-description></long-description>
          <tag line="33" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="49" package="Default">
        <name>isHalResource</name>
        <full_name>isHalResource</full_name>
        <docblock line="44">
          <description>Does the payload represent a HAL item?</description>
          <long-description></long-description>
          <tag line="44" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="63" package="Default">
        <name>setPayload</name>
        <full_name>setPayload</full_name>
        <docblock line="55">
          <description>Set the payload for the response</description>
          <long-description>&lt;p&gt;This is the value to represent in the response.&lt;/p&gt;</long-description>
          <tag line="55" name="param" description="" type="mixed" variable="$payload">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="55" name="return" description="" type="\PhlyRestfully\View\RestfulJsonModel">
            <type by_reference="false">\PhlyRestfully\View\RestfulJsonModel</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$payload</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="74" package="Default">
        <name>getPayload</name>
        <full_name>getPayload</full_name>
        <docblock line="69">
          <description>Retrieve the payload for the response</description>
          <long-description></long-description>
          <tag line="69" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file View/RestfulJsonModel.php</critical>
    </parse_markers>
  </file>
  <file path="View/RestfulJsonStrategy.php" hash="b263de236d07238fdaf07872790b13e9" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\View" line="25" package="Default">
      <extends>\Zend\View\Strategy\JsonStrategy</extends>
      <name>RestfulJsonStrategy</name>
      <full_name>\PhlyRestfully\View\RestfulJsonStrategy</full_name>
      <docblock line="14">
        <description>Extension of the JSON strategy to handle the RestfulJsonModel and provide
a Content-Type header appropriate to the response it describes.</description>
        <long-description>&lt;p&gt;This will give the following content types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;application/hal+json for a result that contains HAL-compliant links&lt;/li&gt;
&lt;li&gt;application/api-problem+json for a result that contains a Problem
API-formatted response&lt;/li&gt;
&lt;li&gt;application/json for all other responses&lt;/li&gt;
&lt;/ul&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="29" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="29">
          <name>$renderer</name>
          <default></default>
          <type>\PhlyRestfully\View\RestfulJsonRenderer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="40" package="Default">
        <name>selectRenderer</name>
        <full_name>selectRenderer</full_name>
        <docblock line="34">
          <description>Detect if we should use the RestfulJsonRenderer based on model type.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="\Zend\View\ViewEvent" variable="$e">
            <type by_reference="false">\Zend\View\ViewEvent</type>
          </tag>
          <tag line="34" name="return" description="" type="null|\PhlyRestfully\View\RestfulJsonRenderer">
            <type by_reference="false">null</type>
            <type by_reference="false">\PhlyRestfully\View\RestfulJsonRenderer</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$e</name>
          <default></default>
          <type>\Zend\View\ViewEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="61" package="Default">
        <name>injectResponse</name>
        <full_name>injectResponse</full_name>
        <docblock line="53">
          <description>Inject the response</description>
          <long-description>&lt;p&gt;Injects the response with the rendered content, and sets the content
type based on the detection that occurred during renderer selection.&lt;/p&gt;</long-description>
          <tag line="53" name="param" description="" type="\Zend\View\ViewEvent" variable="$e">
            <type by_reference="false">\Zend\View\ViewEvent</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$e</name>
          <default></default>
          <type>\Zend\View\ViewEvent</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file View/RestfulJsonStrategy.php</critical>
      <error line="27" code="50018">No DocBlock was found for property $contentType</error>
      <error line="29" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="View/RestfulJsonRenderer.php" hash="ffbf2a02924e8a4a3efcfad39eeb9879" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\View" line="29" package="Default">
      <extends>\Zend\View\Renderer\JsonRenderer</extends>
      <name>RestfulJsonRenderer</name>
      <full_name>\PhlyRestfully\View\RestfulJsonRenderer</full_name>
      <docblock line="22">
        <description>Handles rendering of the following:</description>
        <long-description>&lt;ul&gt;
&lt;li&gt;API-Problem&lt;/li&gt;
&lt;li&gt;HAL collections&lt;/li&gt;
&lt;li&gt;HAL resources&lt;/li&gt;
&lt;/ul&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="55" package="Default">
        <name>setHelperPluginManager</name>
        <full_name>setHelperPluginManager</full_name>
        <docblock line="48">
          <description>Set helper plugin manager instance.</description>
          <long-description>&lt;p&gt;Also ensures that the 'HalLinks' helper is present.&lt;/p&gt;</long-description>
          <tag line="48" name="param" description="" type="\Zend\View\HelperPluginManager" variable="$helpers">
            <type by_reference="false">\Zend\View\HelperPluginManager</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$helpers</name>
          <default></default>
          <type>\Zend\View\HelperPluginManager</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="68" package="Default">
        <name>getHelperPluginManager</name>
        <full_name>getHelperPluginManager</full_name>
        <docblock line="63">
          <description>Lazy-loads a helper plugin manager if none available.</description>
          <long-description></long-description>
          <tag line="63" name="return" description="" type="\Zend\View\HelperPluginManager">
            <type by_reference="false">\Zend\View\HelperPluginManager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="82" package="Default">
        <name>setDisplayExceptions</name>
        <full_name>setDisplayExceptions</full_name>
        <docblock line="76">
          <description>Set display_exceptions flag</description>
          <long-description></long-description>
          <tag line="76" name="param" description="" type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="76" name="return" description="" type="\PhlyRestfully\View\RestfulJsonRenderer">
            <type by_reference="false">\PhlyRestfully\View\RestfulJsonRenderer</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$flag</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="93" package="Default">
        <name>isApiProblem</name>
        <full_name>isApiProblem</full_name>
        <docblock line="88">
          <description>Whether or not what was rendered represents an API problem</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="101" package="Default">
        <name>getApiProblem</name>
        <full_name>getApiProblem</full_name>
        <docblock line="98">
          <description></description>
          <long-description></long-description>
          <tag line="98" name="return" description="" type="null|\PhlyRestfully\ApiProblem">
            <type by_reference="false">null</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\View" line="119" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="106">
          <description>Render a view model</description>
          <long-description>&lt;p&gt;If the view model is a RestfulJsonRenderer, determines if it represents
an ApiProblem, HalCollection, or HalResource, and, if so, creates a custom
representation appropriate to the type.&lt;/p&gt;

&lt;p&gt;If not, it passes control to the parent to render.&lt;/p&gt;</long-description>
          <tag line="106" name="param" description="" type="mixed" variable="$nameOrModel">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="106" name="param" description="" type="mixed" variable="$values">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="106" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$nameOrModel</name>
          <default></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$values</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file View/RestfulJsonRenderer.php</critical>
      <critical line="31" code="50019">No short description for property $apiProblem</critical>
      <critical line="43" code="50019">No short description for property $helpers</critical>
      <error line="98" code="50012">No short description for method getApiProblem()</error>
    </parse_markers>
  </file>
  <file path="HalCollection.php" hash="15ef9f6d8e871d2b8c0f3364edcf352d" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="17" package="Default">
      <extends/>
      <implements>\PhlyRestfully\LinkCollectionAwareInterface</implements>
      <name>HalCollection</name>
      <full_name>\PhlyRestfully\HalCollection</full_name>
      <docblock line="14">
        <description>Model a collection for use with HAL payloads</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="106" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
          <tag line="100" name="param" description="" type="array|\Traversable|\Zend\Paginator\Paginator" variable="$collection">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
            <type by_reference="false">\Zend\Paginator\Paginator</type>
          </tag>
          <tag line="100" name="param" description="" type="string" variable="$collectionRoute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="param" description="" type="string" variable="$resourceRoute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="throws" description="" type="\PhlyRestfully\Exception\InvalidCollectionException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidCollectionException</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$collection</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$resourceRoute</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="106">
          <name>$resourceRouteParams</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="106">
          <name>$resourceRouteOptions</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="135" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="129">
          <description>Proxy to properties to allow read access</description>
          <long-description></long-description>
          <tag line="129" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="180" package="Default">
        <name>setAttributes</name>
        <full_name>setAttributes</full_name>
        <docblock line="174">
          <description>Set additional attributes to render as part of resource</description>
          <long-description></long-description>
          <tag line="174" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="174" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="192" package="Default">
        <name>setCollectionName</name>
        <full_name>setCollectionName</full_name>
        <docblock line="186">
          <description>Set the collection name (for use within the _embedded object)</description>
          <long-description></long-description>
          <tag line="186" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="204" package="Default">
        <name>setCollectionRoute</name>
        <full_name>setCollectionRoute</full_name>
        <docblock line="198">
          <description>Set the collection route; used for generating pagination links</description>
          <long-description></long-description>
          <tag line="198" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="217" package="Default">
        <name>setCollectionRouteOptions</name>
        <full_name>setCollectionRouteOptions</full_name>
        <docblock line="210">
          <description>Set options to use with the collection route; used for generating pagination links</description>
          <long-description></long-description>
          <tag line="210" name="param" description="" type="array|\Traversable" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="210" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
          <tag line="210" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="240" package="Default">
        <name>setCollectionRouteParams</name>
        <full_name>setCollectionRouteParams</full_name>
        <docblock line="233">
          <description>Set parameters/substitutions to use with the collection route; used for generating pagination links</description>
          <long-description></long-description>
          <tag line="233" name="param" description="" type="array|\Traversable" variable="$params">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="233" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
          <tag line="233" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="262" package="Default">
        <name>setIdentifierName</name>
        <full_name>setIdentifierName</full_name>
        <docblock line="256">
          <description>Set the resource key that represents the identifier name</description>
          <long-description></long-description>
          <tag line="256" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="274" package="Default">
        <name>setLinks</name>
        <full_name>setLinks</full_name>
        <docblock line="268">
          <description>Set link collection</description>
          <long-description></long-description>
          <tag line="268" name="param" description="" type="\PhlyRestfully\LinkCollection" variable="$links">
            <type by_reference="false">\PhlyRestfully\LinkCollection</type>
          </tag>
          <tag line="268" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="274">
          <name>$links</name>
          <default></default>
          <type>\PhlyRestfully\LinkCollection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="287" package="Default">
        <name>setPage</name>
        <full_name>setPage</full_name>
        <docblock line="280">
          <description>Set current page</description>
          <long-description></long-description>
          <tag line="280" name="param" description="" type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="280" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
          <tag line="280" name="throws" description="for non-positive and/or non-integer values" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="287">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="315" package="Default">
        <name>setPageSize</name>
        <full_name>setPageSize</full_name>
        <docblock line="308">
          <description>Set page size</description>
          <long-description></long-description>
          <tag line="308" name="param" description="" type="int" variable="$size">
            <type by_reference="false">int</type>
          </tag>
          <tag line="308" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
          <tag line="308" name="throws" description="for non-positive and/or non-integer values" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$size</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="342" package="Default">
        <name>setResourceLinks</name>
        <full_name>setResourceLinks</full_name>
        <docblock line="336">
          <description>Set default set of links to use for resources</description>
          <long-description></long-description>
          <tag line="336" name="param" description="" type="\PhlyRestfully\LinkCollection" variable="$links">
            <type by_reference="false">\PhlyRestfully\LinkCollection</type>
          </tag>
          <tag line="336" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$links</name>
          <default></default>
          <type>\PhlyRestfully\LinkCollection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="354" package="Default">
        <name>setResourceRoute</name>
        <full_name>setResourceRoute</full_name>
        <docblock line="348">
          <description>Set the resource route</description>
          <long-description></long-description>
          <tag line="348" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="348" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="367" package="Default">
        <name>setResourceRouteOptions</name>
        <full_name>setResourceRouteOptions</full_name>
        <docblock line="360">
          <description>Set options to use with the resource route</description>
          <long-description></long-description>
          <tag line="360" name="param" description="" type="array|\Traversable" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="360" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
          <tag line="360" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="390" package="Default">
        <name>setResourceRouteParams</name>
        <full_name>setResourceRouteParams</full_name>
        <docblock line="383">
          <description>Set parameters/substitutions to use with the resource route</description>
          <long-description></long-description>
          <tag line="383" name="param" description="" type="array|\Traversable" variable="$params">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="383" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
          <tag line="383" name="throws" description="" type="\PhlyRestfully\Exception\InvalidArgumentException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="411" package="Default">
        <name>getLinks</name>
        <full_name>getLinks</full_name>
        <docblock line="406">
          <description>Get link collection</description>
          <long-description></long-description>
          <tag line="406" name="return" description="" type="\PhlyRestfully\LinkCollection">
            <type by_reference="false">\PhlyRestfully\LinkCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="424" package="Default">
        <name>getResourceLinks</name>
        <full_name>getResourceLinks</full_name>
        <docblock line="419">
          <description>Retrieve default resource links, if any</description>
          <long-description></long-description>
          <tag line="419" name="return" description="" type="null|\PhlyRestfully\LinkCollection">
            <type by_reference="false">null</type>
            <type by_reference="false">\PhlyRestfully\LinkCollection</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file HalCollection.php</critical>
      <critical line="26" code="50019">No short description for property $collection</critical>
      <critical line="38" code="50019">No short description for property $collectionRoute</critical>
      <critical line="43" code="50019">No short description for property $collectionRouteOptions</critical>
      <critical line="48" code="50019">No short description for property $collectionRouteParams</critical>
      <critical line="61" code="50019">No short description for property $links</critical>
      <critical line="80" code="50019">No short description for property $resourceLinks</critical>
      <critical line="85" code="50019">No short description for property $resourceRoute</critical>
      <critical line="90" code="50019">No short description for property $resourceRouteOptions</critical>
      <critical line="95" code="50019">No short description for property $resourceRouteParams</critical>
      <error line="100" code="50012">No short description for method __construct()</error>
      <error line="100" code="50014">Name of argument $resourceRoute does not match with the DocBlock's name $collectionRoute in __construct()</error>
      <error line="100" code="50014">Name of argument $resourceRouteParams does not match with the DocBlock's name $resourceRoute in __construct()</error>
      <error line="100" code="50015">Argument $resourceRouteOptions is missing from the Docblock of __construct()</error>
      <notice line="100" code="50013">Parameter $collectionRoute could not be found in __construct()</notice>
    </parse_markers>
  </file>
  <file path="ResourceController.php" hash="acc55d5bf14cef2e9f1de0249c8a0e58" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="37" package="Default">
      <extends>\Zend\Mvc\Controller\AbstractRestfulController</extends>
      <name>ResourceController</name>
      <full_name>\PhlyRestfully\ResourceController</full_name>
      <docblock line="16">
        <description>Controller for handling resources.</description>
        <long-description>&lt;p&gt;Extends the base AbstractRestfulController in order to provide very specific
semantics for building a RESTful JSON service. All operations return either&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a HAL-compliant response with appropriate hypermedia links&lt;/li&gt;
&lt;li&gt;a Problem API-compliant response for reporting an error condition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may specify what specific HTTP method types you wish to respond to, and
OPTIONS will then report those; attempting any HTTP method falling outside
that list will result in a 405 (Method Not Allowed) response.&lt;/p&gt;

&lt;p&gt;I recommend using resource-specific factories when using this controller,
to allow injecting the specific resource you wish to use (and its listeners),
which will also allow you to have multiple instances of the controller when
desired.&lt;/p&gt;</long-description>
        <tag line="16" name="see" description="\PhlyRestfully\http://tools.ietf.org/html/draft-kelly-json-hal-03" refers="\PhlyRestfully\http://tools.ietf.org/html/draft-kelly-json-hal-03"/>
        <tag line="16" name="see" description="\PhlyRestfully\http://tools.ietf.org/html/draft-nottingham-http-problem-02" refers="\PhlyRestfully\http://tools.ietf.org/html/draft-nottingham-http-problem-02"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="129" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="121">
          <description>Constructor</description>
          <long-description>&lt;p&gt;Allows you to set the event identifier, which can be useful to allow multiple
instances of this controller to react to different sets of shared events.&lt;/p&gt;</long-description>
          <tag line="121" name="param" description="" type="null|string" variable="$eventIdentifier">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$eventIdentifier</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="141" package="Default">
        <name>setAcceptCriteria</name>
        <full_name>setAcceptCriteria</full_name>
        <docblock line="136">
          <description>Set the Accept header criteria for use with the AcceptableViewModelSelector</description>
          <long-description></long-description>
          <tag line="136" name="param" description="" type="array" variable="$criteria">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="151" package="Default">
        <name>setCollectionHttpOptions</name>
        <full_name>setCollectionHttpOptions</full_name>
        <docblock line="146">
          <description>Set the allowed HTTP OPTIONS for the resource (collection)</description>
          <long-description></long-description>
          <tag line="146" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="161" package="Default">
        <name>setCollectionName</name>
        <full_name>setCollectionName</full_name>
        <docblock line="156">
          <description>Set the name to which to assign a collection in a HalCollection</description>
          <long-description></long-description>
          <tag line="156" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="171" package="Default">
        <name>setContentTypes</name>
        <full_name>setContentTypes</full_name>
        <docblock line="166">
          <description>Set the allowed content types for the resource (collection)</description>
          <long-description></long-description>
          <tag line="166" name="param" description="" type="array" variable="$contentTypes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$contentTypes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="181" package="Default">
        <name>setPageSize</name>
        <full_name>setPageSize</full_name>
        <docblock line="176">
          <description>Set the default page size for paginated responses</description>
          <long-description></long-description>
          <tag line="176" name="param" description="" type="int" variable="$count">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$count</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="191" package="Default">
        <name>setResource</name>
        <full_name>setResource</full_name>
        <docblock line="186">
          <description>Inject the resource with which this controller will communicate.</description>
          <long-description></long-description>
          <tag line="186" name="param" description="" type="\PhlyRestfully\ResourceInterface" variable="$resource">
            <type by_reference="false">\PhlyRestfully\ResourceInterface</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$resource</name>
          <default></default>
          <type>\PhlyRestfully\ResourceInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="203" package="Default">
        <name>getResource</name>
        <full_name>getResource</full_name>
        <docblock line="196">
          <description>Returns the resource</description>
          <long-description></long-description>
          <tag line="196" name="throws" description="If no resource has been set" type="\PhlyRestfully\Exception\DomainException">
            <type by_reference="false">\PhlyRestfully\Exception\DomainException</type>
          </tag>
          <tag line="196" name="return" description="" type="\PhlyRestfully\ResourceInterface">
            <type by_reference="false">\PhlyRestfully\ResourceInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="218" package="Default">
        <name>setResourceHttpOptions</name>
        <full_name>setResourceHttpOptions</full_name>
        <docblock line="213">
          <description>Set the allowed HTTP OPTIONS for a resource</description>
          <long-description></long-description>
          <tag line="213" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="229" package="Default">
        <name>setIdentifierName</name>
        <full_name>setIdentifierName</full_name>
        <docblock line="223">
          <description>Set the route match segment or query string parameter indicating the
resource identifier</description>
          <long-description></long-description>
          <tag line="223" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="237" package="Default">
        <name>getIdentifierName</name>
        <full_name>getIdentifierName</full_name>
        <docblock line="234">
          <description></description>
          <long-description></long-description>
          <tag line="234" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="247" package="Default">
        <name>setRoute</name>
        <full_name>setRoute</full_name>
        <docblock line="242">
          <description>Inject the route name for this resource.</description>
          <long-description></long-description>
          <tag line="242" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="269" package="Default">
        <name>onDispatch</name>
        <full_name>onDispatch</full_name>
        <docblock line="252">
          <description>Handle the dispatch event</description>
          <long-description>&lt;p&gt;Does several "pre-flight" checks:
- Raises an exception if no resource is composed.
- Raises an exception if no route is composed.
- Returns a 405 response if the current HTTP request method is not in
  $options&lt;/p&gt;

&lt;p&gt;When the dispatch is complete, it will check to see if an array was
returned; if so, it will cast it to a view model using the
AcceptableViewModelSelector plugin, and the $acceptCriteria property.&lt;/p&gt;</long-description>
          <tag line="252" name="param" description="" type="\Zend\Mvc\MvcEvent" variable="$e">
            <type by_reference="false">\Zend\Mvc\MvcEvent</type>
          </tag>
          <tag line="252" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="252" name="throws" description="" type="\PhlyRestfully\Exception\DomainException">
            <type by_reference="false">\PhlyRestfully\Exception\DomainException</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$e</name>
          <default></default>
          <type>\Zend\Mvc\MvcEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="317" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="311">
          <description>Create a new resource</description>
          <long-description></long-description>
          <tag line="311" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="311" name="return" description="" type="\Zend\Http\Response|\PhlyRestfully\ApiProblem|\PhlyRestfully\HalResource">
            <type by_reference="false">\Zend\Http\Response</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
            <type by_reference="false">\PhlyRestfully\HalResource</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="362" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="356">
          <description>Delete an existing resource</description>
          <long-description></long-description>
          <tag line="356" name="param" description="" type="int|string" variable="$id">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="356" name="return" description="" type="\Zend\Http\Response|\PhlyRestfully\ApiProblem">
            <type by_reference="false">\Zend\Http\Response</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
          </tag>
        </docblock>
        <argument line="362">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="396" package="Default">
        <name>deleteList</name>
        <full_name>deleteList</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="433" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="427">
          <description>Return single resource</description>
          <long-description></long-description>
          <tag line="427" name="param" description="" type="int|string" variable="$id">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="427" name="return" description="" type="\Zend\Http\Response|\PhlyRestfully\ApiProblem|\PhlyRestfully\HalResource">
            <type by_reference="false">\Zend\Http\Response</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
            <type by_reference="false">\PhlyRestfully\HalResource</type>
          </tag>
        </docblock>
        <argument line="433">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="472" package="Default">
        <name>getList</name>
        <full_name>getList</full_name>
        <docblock line="467">
          <description>Return collection of resources</description>
          <long-description></long-description>
          <tag line="467" name="return" description="" type="\Zend\Http\Response|\PhlyRestfully\HalCollection">
            <type by_reference="false">\Zend\Http\Response</type>
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="512" package="Default">
        <name>head</name>
        <full_name>head</full_name>
        <docblock line="506">
          <description>Retrieve HEAD metadata for the resource and/or collection</description>
          <long-description></long-description>
          <tag line="506" name="param" description="" type="null|mixed" variable="$id">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="506" name="return" description="" type="\Zend\Http\Response|\PhlyRestfully\ApiProblem|\PhlyRestfully\HalResource|\PhlyRestfully\HalCollection">
            <type by_reference="false">\Zend\Http\Response</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
            <type by_reference="false">\PhlyRestfully\HalResource</type>
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="512">
          <name>$id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="527" package="Default">
        <name>options</name>
        <full_name>options</full_name>
        <docblock line="520">
          <description>Respond to OPTIONS request</description>
          <long-description>&lt;p&gt;Uses $options to set the Allow header line and return an empty response.&lt;/p&gt;</long-description>
          <tag line="520" name="return" description="" type="\Zend\Http\Response">
            <type by_reference="false">\Zend\Http\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="563" package="Default">
        <name>patch</name>
        <full_name>patch</full_name>
        <docblock line="556">
          <description>Respond to the PATCH method (partial update of existing resource)</description>
          <long-description></long-description>
          <tag line="556" name="param" description="" type="int|string" variable="$id">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="556" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="556" name="return" description="" type="\Zend\Http\Response|\PhlyRestfully\ApiProblem|\PhlyRestfully\HalResource">
            <type by_reference="false">\Zend\Http\Response</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
            <type by_reference="false">\PhlyRestfully\HalResource</type>
          </tag>
        </docblock>
        <argument line="563">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="563">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="601" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="594">
          <description>Update an existing resource</description>
          <long-description></long-description>
          <tag line="594" name="param" description="" type="int|string" variable="$id">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="594" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="594" name="return" description="" type="\Zend\Http\Response|\PhlyRestfully\ApiProblem|\PhlyRestfully\HalResource">
            <type by_reference="false">\Zend\Http\Response</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
            <type by_reference="false">\PhlyRestfully\HalResource</type>
          </tag>
        </docblock>
        <argument line="601">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="601">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="637" package="Default">
        <name>replaceList</name>
        <full_name>replaceList</full_name>
        <docblock line="631">
          <description>Update an existing collection of resources</description>
          <long-description></long-description>
          <tag line="631" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="631" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="637">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file ResourceController.php</critical>
      <critical line="88" code="50019">No short description for property $resource</critical>
      <error line="234" code="50012">No short description for method getIdentifierName()</error>
      <error line="396" code="50010">No DocBlock was found for method deleteList()</error>
    </parse_markers>
  </file>
  <file path="Listener/ApiProblemListener.php" hash="60f9d64a7930c6bf6f2bfc59cff964c1" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Listener" line="26" package="Default">
      <extends/>
      <implements>\Zend\EventManager\ListenerAggregateInterface</implements>
      <name>ApiProblemListener</name>
      <full_name>\PhlyRestfully\Listener\ApiProblemListener</full_name>
      <docblock line="18">
        <description>ApiProblemListener</description>
        <long-description>&lt;p&gt;Provides a listener on the render event, at high priority.&lt;/p&gt;

&lt;p&gt;If the MvcEvent represents an error, then its view model and result are
replaced with a RestfulJsonModel containing an API-Problem payload.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="47" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description>Constructor</description>
          <long-description>&lt;p&gt;Set the accept filter, if one is passed&lt;/p&gt;</long-description>
          <tag line="40" name="param" description="" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$filter</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="57" package="Default">
        <name>attach</name>
        <full_name>attach</full_name>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
          <tag line="54" name="param" description="" type="\Zend\EventManager\EventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\EventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="65" package="Default">
        <name>detach</name>
        <full_name>detach</full_name>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag line="62" name="param" description="" type="\Zend\EventManager\EventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\EventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="PhlyRestfully\Listener" line="79" package="Default">
        <name>onRender</name>
        <full_name>onRender</full_name>
        <docblock line="74">
          <description>Listen to the render event</description>
          <long-description></long-description>
          <tag line="74" name="param" description="" type="\Zend\Mvc\MvcEvent" variable="$e">
            <type by_reference="false">\Zend\Mvc\MvcEvent</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$e</name>
          <default></default>
          <type>\Zend\Mvc\MvcEvent</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Listener/ApiProblemListener.php</critical>
      <critical line="35" code="50019">No short description for property $listeners</critical>
      <error line="54" code="50012">No short description for method attach()</error>
      <error line="62" code="50012">No short description for method detach()</error>
    </parse_markers>
  </file>
  <file path="Listener/ResourceParametersListener.php" hash="29ebb7c06954e1619fdf81a5b7139f25" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Listener" line="18" package="Default">
      <extends/>
      <implements>\Zend\EventManager\ListenerAggregateInterface</implements>
      <implements>\Zend\EventManager\SharedListenerAggregateInterface</implements>
      <name>ResourceParametersListener</name>
      <full_name>\PhlyRestfully\Listener\ResourceParametersListener</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="35" package="Default">
        <name>attach</name>
        <full_name>attach</full_name>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
          <tag line="32" name="param" description="" type="\Zend\EventManager\EventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\EventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="43" package="Default">
        <name>detach</name>
        <full_name>detach</full_name>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="param" description="" type="\Zend\EventManager\EventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\EventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="55" package="Default">
        <name>attachShared</name>
        <full_name>attachShared</full_name>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag line="52" name="param" description="" type="\Zend\EventManager\SharedEventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\SharedEventManagerInterface</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\SharedEventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="63" package="Default">
        <name>detachShared</name>
        <full_name>detachShared</full_name>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag line="60" name="param" description="" type="\Zend\EventManager\SharedEventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\SharedEventManagerInterface</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\SharedEventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Listener" line="77" package="Default">
        <name>onDispatch</name>
        <full_name>onDispatch</full_name>
        <docblock line="72">
          <description>Listen to the dispatch event</description>
          <long-description></long-description>
          <tag line="72" name="param" description="" type="\Zend\Mvc\MvcEvent" variable="$e">
            <type by_reference="false">\Zend\Mvc\MvcEvent</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$e</name>
          <default></default>
          <type>\Zend\Mvc\MvcEvent</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Listener/ResourceParametersListener.php</critical>
      <error line="18" code="50000">No DocBlock was found for \PhlyRestfully\Listener\ResourceParametersListener</error>
      <critical line="22" code="50019">No short description for property $listeners</critical>
      <critical line="27" code="50019">No short description for property $sharedListeners</critical>
      <error line="32" code="50012">No short description for method attach()</error>
      <error line="40" code="50012">No short description for method detach()</error>
      <error line="52" code="50012">No short description for method attachShared()</error>
      <error line="60" code="50012">No short description for method detachShared()</error>
    </parse_markers>
  </file>
  <file path="Link.php" hash="dadf919aba31c64ae691bf31e35377b9" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="19" package="Default">
      <extends/>
      <name>Link</name>
      <full_name>\PhlyRestfully\Link</full_name>
      <docblock line="16">
        <description>Object describing a link relation</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="52" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="46">
          <description>Create a link relation</description>
          <long-description></long-description>
          <tag line="46" name="todo" description="filtering and/or validation of relation string"/>
          <tag line="46" name="param" description="" type="string" variable="$relation">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$relation</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="67" package="Default">
        <name>setRoute</name>
        <full_name>setRoute</full_name>
        <docblock line="57">
          <description>Set the route to use when generating the relation URI</description>
          <long-description>&lt;p&gt;If any params or options are passed, those will be passed to route assembly.&lt;/p&gt;</long-description>
          <tag line="57" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="" type="null|array|\Traversable" variable="$params">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="57" name="param" description="" type="null|array|\Traversable" variable="$options">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="57" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="67">
          <name>$options</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="92" package="Default">
        <name>setRouteOptions</name>
        <full_name>setRouteOptions</full_name>
        <docblock line="86">
          <description>Set route assembly options</description>
          <long-description></long-description>
          <tag line="86" name="param" description="" type="array|\Traversable" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="86" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="116" package="Default">
        <name>setRouteParams</name>
        <full_name>setRouteParams</full_name>
        <docblock line="110">
          <description>Set route assembly parameters/substitutions</description>
          <long-description></long-description>
          <tag line="110" name="param" description="" type="array|\Traversable" variable="$params">
            <type by_reference="false">array</type>
            <type by_reference="false">\Traversable</type>
          </tag>
          <tag line="110" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="140" package="Default">
        <name>setUrl</name>
        <full_name>setUrl</full_name>
        <docblock line="134">
          <description>Set an explicit URL for the link relation</description>
          <long-description></long-description>
          <tag line="134" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="172" package="Default">
        <name>getRelation</name>
        <full_name>getRelation</full_name>
        <docblock line="167">
          <description>Retrieve the link relation</description>
          <long-description></long-description>
          <tag line="167" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="182" package="Default">
        <name>getRoute</name>
        <full_name>getRoute</full_name>
        <docblock line="177">
          <description>Return the route to be used to generate the link URL, if any</description>
          <long-description></long-description>
          <tag line="177" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="192" package="Default">
        <name>getRouteOptions</name>
        <full_name>getRouteOptions</full_name>
        <docblock line="187">
          <description>Retrieve route assembly options, if any</description>
          <long-description></long-description>
          <tag line="187" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="202" package="Default">
        <name>getRouteParams</name>
        <full_name>getRouteParams</full_name>
        <docblock line="197">
          <description>Retrieve route assembly parameters/substitutions, if any</description>
          <long-description></long-description>
          <tag line="197" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="212" package="Default">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="207">
          <description>Retrieve the link URL, if set</description>
          <long-description></long-description>
          <tag line="207" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="222" package="Default">
        <name>isComplete</name>
        <full_name>isComplete</full_name>
        <docblock line="217">
          <description>Is the link relation complete -- do we have either a URL or a route set?</description>
          <long-description></long-description>
          <tag line="217" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="232" package="Default">
        <name>hasRoute</name>
        <full_name>hasRoute</full_name>
        <docblock line="227">
          <description>Does the link have a route set?</description>
          <long-description></long-description>
          <tag line="227" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="242" package="Default">
        <name>hasUrl</name>
        <full_name>hasUrl</full_name>
        <docblock line="237">
          <description>Does the link have a URL set?</description>
          <long-description></long-description>
          <tag line="237" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Link.php</critical>
      <critical line="21" code="50019">No short description for property $relation</critical>
      <critical line="26" code="50019">No short description for property $route</critical>
      <critical line="31" code="50019">No short description for property $routeOptions</critical>
      <critical line="36" code="50019">No short description for property $routeParams</critical>
      <critical line="41" code="50019">No short description for property $url</critical>
    </parse_markers>
  </file>
  <file path="ResourceEvent.php" hash="ef0b0d955d1a6c28b924e09b2434fd64" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="15" package="Default">
      <extends>\Zend\EventManager\Event</extends>
      <name>ResourceEvent</name>
      <full_name>\PhlyRestfully\ResourceEvent</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="31" package="Default">
        <name>setQueryParams</name>
        <full_name>setQueryParams</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag line="27" name="param" description="" type="\Zend\Stdlib\Parameters" variable="$params">
            <type by_reference="false">\Zend\Stdlib\Parameters</type>
          </tag>
          <tag line="27" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$params</name>
          <default>null</default>
          <type>\Zend\Stdlib\Parameters</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="40" package="Default">
        <name>getQueryParams</name>
        <full_name>getQueryParams</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag line="37" name="return" description="" type="null|\Zend\Stdlib\Parameters">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend\Stdlib\Parameters</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="54" package="Default">
        <name>getQueryParam</name>
        <full_name>getQueryParam</full_name>
        <docblock line="45">
          <description>Retrieve a single query parameter by name</description>
          <long-description>&lt;p&gt;If not present, returns the $default value provided.&lt;/p&gt;</long-description>
          <tag line="45" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="45" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="68" package="Default">
        <name>setRouteMatch</name>
        <full_name>setRouteMatch</full_name>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
          <tag line="64" name="param" description="" type="\Zend\Mvc\Router\RouteMatch" variable="$matches">
            <type by_reference="false">\Zend\Mvc\Router\RouteMatch</type>
          </tag>
          <tag line="64" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$matches</name>
          <default>null</default>
          <type>\Zend\Mvc\Router\RouteMatch</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="77" package="Default">
        <name>getRouteMatch</name>
        <full_name>getRouteMatch</full_name>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
          <tag line="74" name="return" description="" type="null|\Zend\Mvc\Router\RouteMatch">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend\Mvc\Router\RouteMatch</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="91" package="Default">
        <name>getRouteParam</name>
        <full_name>getRouteParam</full_name>
        <docblock line="82">
          <description>Retrieve a single route match parameter by name.</description>
          <long-description>&lt;p&gt;If not present, returns the $default value provided.&lt;/p&gt;</long-description>
          <tag line="82" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="82" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file ResourceEvent.php</critical>
      <error line="15" code="50000">No DocBlock was found for \PhlyRestfully\ResourceEvent</error>
      <critical line="17" code="50019">No short description for property $queryParams</critical>
      <critical line="22" code="50019">No short description for property $routeMatch</critical>
      <error line="27" code="50012">No short description for method setQueryParams()</error>
      <error line="37" code="50012">No short description for method getQueryParams()</error>
      <error line="64" code="50012">No short description for method setRouteMatch()</error>
      <error line="74" code="50012">No short description for method getRouteMatch()</error>
    </parse_markers>
  </file>
  <file path="Plugin/HalLinks.php" hash="9f7427fb60d0aec51e0f3c7e1f2c379c" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully\Plugin" line="36" package="Default">
      <extends>\Zend\View\Helper\AbstractHelper</extends>
      <implements>\Zend\Mvc\Controller\Plugin\PluginInterface</implements>
      <implements>\Zend\EventManager\EventManagerAwareInterface</implements>
      <name>HalLinks</name>
      <full_name>\PhlyRestfully\Plugin\HalLinks</full_name>
      <docblock line="33">
        <description>Generate links for use with HAL payloads</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="82" package="Default">
        <name>setController</name>
        <full_name>setController</full_name>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
          <tag line="79" name="param" description="" type="\Zend\Stdlib\DispatchableInterface" variable="$controller">
            <type by_reference="false">\Zend\Stdlib\DispatchableInterface</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$controller</name>
          <default></default>
          <type>\Zend\Stdlib\DispatchableInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="90" package="Default">
        <name>getController</name>
        <full_name>getController</full_name>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
          <tag line="87" name="return" description="" type="\Zend\Stdlib\DispatchableInterface">
            <type by_reference="false">\Zend\Stdlib\DispatchableInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="102" package="Default">
        <name>getEventManager</name>
        <full_name>getEventManager</full_name>
        <docblock line="95">
          <description>Retrieve the event manager instance</description>
          <long-description>&lt;p&gt;Lazy-initializes one if none present.&lt;/p&gt;</long-description>
          <tag line="95" name="return" description="" type="\Zend\EventManager\EventManagerInterface">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="115" package="Default">
        <name>setEventManager</name>
        <full_name>setEventManager</full_name>
        <docblock line="110">
          <description>Set the event manager instance</description>
          <long-description></long-description>
          <tag line="110" name="param" description="" type="\Zend\EventManager\EventManagerInterface" variable="$events">
            <type by_reference="false">\Zend\EventManager\EventManagerInterface</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$events</name>
          <default></default>
          <type>\Zend\EventManager\EventManagerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="158" package="Default">
        <name>getMetadataMap</name>
        <full_name>getMetadataMap</full_name>
        <docblock line="153">
          <description>Retrieve the metadata map</description>
          <long-description></long-description>
          <tag line="153" name="return" description="" type="\PhlyRestfully\MetadataMap">
            <type by_reference="false">\PhlyRestfully\MetadataMap</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="172" package="Default">
        <name>setMetadataMap</name>
        <full_name>setMetadataMap</full_name>
        <docblock line="166">
          <description>Set the metadata map</description>
          <long-description></long-description>
          <tag line="166" name="param" description="" type="\PhlyRestfully\MetadataMap" variable="$map">
            <type by_reference="false">\PhlyRestfully\MetadataMap</type>
          </tag>
          <tag line="166" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$map</name>
          <default></default>
          <type>\PhlyRestfully\MetadataMap</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="181" package="Default">
        <name>setServerUrlHelper</name>
        <full_name>setServerUrlHelper</full_name>
        <docblock line="178">
          <description></description>
          <long-description></long-description>
          <tag line="178" name="param" description="" type="\Zend\View\Helper\ServerUrl" variable="$helper">
            <type by_reference="false">\Zend\View\Helper\ServerUrl</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$helper</name>
          <default></default>
          <type>\Zend\View\Helper\ServerUrl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="189" package="Default">
        <name>setUrlHelper</name>
        <full_name>setUrlHelper</full_name>
        <docblock line="186">
          <description></description>
          <long-description></long-description>
          <tag line="186" name="param" description="" type="\Zend\View\Helper\Url" variable="$helper">
            <type by_reference="false">\Zend\View\Helper\Url</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$helper</name>
          <default></default>
          <type>\Zend\View\Helper\Url</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="201" package="Default">
        <name>addHydrator</name>
        <full_name>addHydrator</full_name>
        <docblock line="194">
          <description>Map a resource class to a specific hydrator instance</description>
          <long-description></long-description>
          <tag line="194" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="param" description="" type="\Zend\Stdlib\Hydrator\HydratorInterface" variable="$hydrator">
            <type by_reference="false">\Zend\Stdlib\Hydrator\HydratorInterface</type>
          </tag>
          <tag line="194" name="return" description="" type="\PhlyRestfully\Plugin\RestfulJsonRenderer">
            <type by_reference="false">\PhlyRestfully\Plugin\RestfulJsonRenderer</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$hydrator</name>
          <default></default>
          <type>\Zend\Stdlib\Hydrator\HydratorInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="213" package="Default">
        <name>setDefaultHydrator</name>
        <full_name>setDefaultHydrator</full_name>
        <docblock line="207">
          <description>Set the default hydrator to use if none specified for a class.</description>
          <long-description></long-description>
          <tag line="207" name="param" description="" type="\Zend\Stdlib\Hydrator\HydratorInterface" variable="$hydrator">
            <type by_reference="false">\Zend\Stdlib\Hydrator\HydratorInterface</type>
          </tag>
          <tag line="207" name="return" description="" type="\PhlyRestfully\Plugin\RestfulJsonRenderer">
            <type by_reference="false">\PhlyRestfully\Plugin\RestfulJsonRenderer</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$hydrator</name>
          <default></default>
          <type>\Zend\Stdlib\Hydrator\HydratorInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="229" package="Default">
        <name>getHydratorForResource</name>
        <full_name>getHydratorForResource</full_name>
        <docblock line="219">
          <description>Retrieve a hydrator for a given resource</description>
          <long-description>&lt;p&gt;If the resource has a mapped hydrator, returns that hydrator. If not, and
a default hydrator is present, the default hydrator is returned.
Otherwise, a boolean false is returned.&lt;/p&gt;</long-description>
          <tag line="219" name="param" description="" type="object" variable="$resource">
            <type by_reference="false">object</type>
          </tag>
          <tag line="219" name="return" description="" type="\Zend\Stdlib\Hydrator\HydratorInterface|false">
            <type by_reference="false">\Zend\Stdlib\Hydrator\HydratorInterface</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="274" package="Default">
        <name>renderCollection</name>
        <full_name>renderCollection</full_name>
        <docblock line="243">
          <description>"Render" a HalCollection</description>
          <long-description>&lt;p&gt;Injects pagination links, if the composed collection is a Paginator, and
then loops through the collection to create the data structure representing
the collection.&lt;/p&gt;

&lt;p&gt;For each resource in the collection, the event "renderCollection.resource" is
triggered, with the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"collection", which is the $halCollection passed to the method&lt;/li&gt;
&lt;li&gt;"resource", which is the current resource&lt;/li&gt;
&lt;li&gt;"route", the resource route that will be used to generate links&lt;/li&gt;
&lt;li&gt;"routeParams", any default routing parameters/substitutions to use in URL assembly&lt;/li&gt;
&lt;li&gt;"routeOptions", any default routing options to use in URL assembly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This event can be useful particularly when you have multi-segment routes
and wish to ensure that route parameters are injected, or if you want to
inject query or fragment parameters.&lt;/p&gt;

&lt;p&gt;Event parameters are aggregated in an ArrayObject, which allows you to
directly manipulate them in your listeners:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$params = $e-&gt;getParams();
$params['routeOptions']['query'] = array('format' =&gt; 'json');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="243" name="param" description="" type="\PhlyRestfully\HalCollection" variable="$halCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
          <tag line="243" name="return" description="Associative array representing the payload to render; returns ApiProblem if error in pagination occurs" type="array|\PhlyRestfully\ApiProblem">
            <type by_reference="false">array</type>
            <type by_reference="false">\PhlyRestfully\ApiProblem</type>
          </tag>
        </docblock>
        <argument line="274">
          <name>$halCollection</name>
          <default></default>
          <type>\PhlyRestfully\HalCollection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="306" package="Default">
        <name>renderResource</name>
        <full_name>renderResource</full_name>
        <docblock line="295">
          <description>Render an individual resource</description>
          <long-description>&lt;p&gt;Creates a hash representation of the HalResource. The resource is first
converted to an array, and its associated links are injected as the
"_links" member. If any members of the resource are themselves
HalResource objects, they are extracted into an "_embedded" hash.&lt;/p&gt;</long-description>
          <tag line="295" name="param" description="" type="\PhlyRestfully\HalResource" variable="$halResource">
            <type by_reference="false">\PhlyRestfully\HalResource</type>
          </tag>
          <tag line="295" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="306">
          <name>$halResource</name>
          <default></default>
          <type>\PhlyRestfully\HalResource</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="347" package="Default">
        <name>createLink</name>
        <full_name>createLink</full_name>
        <docblock line="335">
          <description>Create a fully qualified URI for a link</description>
          <long-description>&lt;p&gt;Triggers the "createLink" event with the route, id, resource, and a set of
params that will be passed to the route; listeners can alter any of the
arguments, which will then be used by the method to generate the url.&lt;/p&gt;</long-description>
          <tag line="335" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="335" name="param" description="" type="null|false|int|string" variable="$id">
            <type by_reference="false">null</type>
            <type by_reference="false">false</type>
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="335" name="param" description="" type="null|mixed" variable="$resource">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="335" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="347">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="347">
          <name>$id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="347">
          <name>$resource</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="383" package="Default">
        <name>fromLinkCollection</name>
        <full_name>fromLinkCollection</full_name>
        <docblock line="377">
          <description>Generate HAL links from a LinkCollection</description>
          <long-description></long-description>
          <tag line="377" name="param" description="" type="\PhlyRestfully\LinkCollection" variable="$collection">
            <type by_reference="false">\PhlyRestfully\LinkCollection</type>
          </tag>
          <tag line="377" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$collection</name>
          <default></default>
          <type>\PhlyRestfully\LinkCollection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="419" package="Default">
        <name>fromResource</name>
        <full_name>fromResource</full_name>
        <docblock line="413">
          <description>Create HAL links "object" from a resource/collection</description>
          <long-description></long-description>
          <tag line="413" name="param" description="" type="\PhlyRestfully\LinkCollectionAwareInterface" variable="$resource">
            <type by_reference="false">\PhlyRestfully\LinkCollectionAwareInterface</type>
          </tag>
          <tag line="413" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$resource</name>
          <default></default>
          <type>\PhlyRestfully\LinkCollectionAwareInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="431" package="Default">
        <name>createResourceFromMetadata</name>
        <full_name>createResourceFromMetadata</full_name>
        <docblock line="424">
          <description>Create a resource and/or collection based on a metadata map</description>
          <long-description></long-description>
          <tag line="424" name="param" description="" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="424" name="param" description="" type="\PhlyRestfully\Metadata" variable="$metadata">
            <type by_reference="false">\PhlyRestfully\Metadata</type>
          </tag>
          <tag line="424" name="return" description="" type="\PhlyRestfully\HalResource|\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalResource</type>
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="431">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <argument line="431">
          <name>$metadata</name>
          <default></default>
          <type>\PhlyRestfully\Metadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="486" package="Default">
        <name>createResource</name>
        <full_name>createResource</full_name>
        <docblock line="478">
          <description>Create a HalResource instance and inject it with a self relational link</description>
          <long-description></long-description>
          <tag line="478" name="param" description="" type="\PhlyRestfully\HalResource|array|object" variable="$resource">
            <type by_reference="false">\PhlyRestfully\HalResource</type>
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="478" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="478" name="param" description="" type="string" variable="$identifierName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="478" name="return" description="" type="\PhlyRestfully\HalResource">
            <type by_reference="false">\PhlyRestfully\HalResource</type>
          </tag>
        </docblock>
        <argument line="486">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
        <argument line="486">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="486">
          <name>$identifierName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="516" package="Default">
        <name>createCollection</name>
        <full_name>createCollection</full_name>
        <docblock line="508">
          <description>Creates a HalCollection instance with a self relational link</description>
          <long-description></long-description>
          <tag line="508" name="param" description="" type="\PhlyRestfully\HalCollection|array|object" variable="$collection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="508" name="param" description="" type="null|string" variable="$route">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="508" name="param" description="" type="string" variable="$identiferName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="508" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$collection</name>
          <default></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$route</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="536" package="Default">
        <name>createCollectionFromMetadata</name>
        <full_name>createCollectionFromMetadata</full_name>
        <docblock line="531">
          <description></description>
          <long-description></long-description>
          <tag line="531" name="param" description="" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="531" name="param" description="" type="\PhlyRestfully\Metadata" variable="$metadata">
            <type by_reference="false">\PhlyRestfully\Metadata</type>
          </tag>
          <tag line="531" name="return" description="" type="\PhlyRestfully\HalCollection">
            <type by_reference="false">\PhlyRestfully\HalCollection</type>
          </tag>
        </docblock>
        <argument line="536">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <argument line="536">
          <name>$metadata</name>
          <default></default>
          <type>\PhlyRestfully\Metadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully\Plugin" line="552" package="Default">
        <name>injectSelfLink</name>
        <full_name>injectSelfLink</full_name>
        <docblock line="545">
          <description>Inject a "self" relational link based on the route and identifier</description>
          <long-description></long-description>
          <tag line="545" name="param" description="" type="\PhlyRestfully\LinkCollectionAwareInterface" variable="$resource">
            <type by_reference="false">\PhlyRestfully\LinkCollectionAwareInterface</type>
          </tag>
          <tag line="545" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="545" name="param" description="" type="string" variable="$identifier">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="552">
          <name>$resource</name>
          <default></default>
          <type>\PhlyRestfully\LinkCollectionAwareInterface</type>
        </argument>
        <argument line="552">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="552">
          <name>$identifier</name>
          <default>'id'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file Plugin/HalLinks.php</critical>
      <critical line="40" code="50019">No short description for property $controller</critical>
      <critical line="52" code="50019">No short description for property $events</critical>
      <critical line="64" code="50019">No short description for property $metadataMap</critical>
      <critical line="69" code="50019">No short description for property $serverUrlHelper</critical>
      <critical line="74" code="50019">No short description for property $urlHelper</critical>
      <error line="79" code="50012">No short description for method setController()</error>
      <error line="87" code="50012">No short description for method getController()</error>
      <error line="178" code="50012">No short description for method setServerUrlHelper()</error>
      <error line="186" code="50012">No short description for method setUrlHelper()</error>
      <notice line="508" code="50013">Parameter $identiferName could not be found in createCollection()</notice>
      <error line="531" code="50012">No short description for method createCollectionFromMetadata()</error>
    </parse_markers>
  </file>
  <file path="HalResource.php" hash="c302b700f3be33125bcd3e0ce933dc40" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhlyRestfully" line="11" package="Default">
      <extends/>
      <implements>\PhlyRestfully\LinkCollectionAwareInterface</implements>
      <name>HalResource</name>
      <full_name>\PhlyRestfully\HalResource</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="27" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag line="22" name="param" description="" type="object|array" variable="$resource">
            <type by_reference="false">object</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="22" name="param" description="" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="22" name="throws" description="if resource is not an object or array" type="\PhlyRestfully\Exception\InvalidResourceException">
            <type by_reference="false">\PhlyRestfully\Exception\InvalidResourceException</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="43" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="37">
          <description>Retrieve properties</description>
          <long-description></long-description>
          <tag line="37" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="66" package="Default">
        <name>setLinks</name>
        <full_name>setLinks</full_name>
        <docblock line="60">
          <description>Set link collection</description>
          <long-description></long-description>
          <tag line="60" name="param" description="" type="\PhlyRestfully\LinkCollection" variable="$links">
            <type by_reference="false">\PhlyRestfully\LinkCollection</type>
          </tag>
          <tag line="60" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$links</name>
          <default></default>
          <type>\PhlyRestfully\LinkCollection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="77" package="Default">
        <name>getLinks</name>
        <full_name>getLinks</full_name>
        <docblock line="72">
          <description>Get link collection</description>
          <long-description></long-description>
          <tag line="72" name="return" description="" type="\PhlyRestfully\LinkCollection">
            <type by_reference="false">\PhlyRestfully\LinkCollection</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file HalResource.php</critical>
      <error line="11" code="50000">No DocBlock was found for \PhlyRestfully\HalResource</error>
      <error line="13" code="50018">No DocBlock was found for property $id</error>
      <critical line="15" code="50019">No short description for property $links</critical>
      <error line="20" code="50018">No DocBlock was found for property $resource</error>
      <error line="22" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="LinkCollectionAwareInterface.php" hash="8b4427b0163bf0fc819d63566663b61e" package="PhlyRestfully">
    <docblock line="2">
      <description></description>
      <long-description></long-description>
      <tag line="2" name="link" description="for the canonical source repository" link="https://github.com/weierophinney/PhlyRestfully"/>
      <tag line="2" name="copyright" description="Copyright (c) 2013 Matthew Weier O'Phinney"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause"/>
      <tag line="2" name="package" description="PhlyRestfully"/>
    </docblock>
    <interface namespace="PhlyRestfully" line="11" package="Default">
      <name>LinkCollectionAwareInterface</name>
      <full_name>\PhlyRestfully\LinkCollectionAwareInterface</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="13" package="Default">
        <name>setLinks</name>
        <full_name>setLinks</full_name>
        <argument line="13">
          <name>$links</name>
          <default></default>
          <type>\PhlyRestfully\LinkCollection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhlyRestfully" line="14" package="Default">
        <name>getLinks</name>
        <full_name>getLinks</full_name>
      </method>
    </interface>
    <parse_markers>
      <critical line="2" code="50008">No short description for file LinkCollectionAwareInterface.php</critical>
      <error line="13" code="50010">No DocBlock was found for method setLinks()</error>
      <error line="14" code="50010">No DocBlock was found for method getLinks()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="PhlyRestfully" full_name="PhlyRestfully">
    <package name="Factory" full_name="PhlyRestfully\Factory"/>
  </package>
  <namespace name="PhlyRestfully" full_name="PhlyRestfully">
    <namespace name="Exception" full_name="PhlyRestfully\Exception"/>
    <namespace name="Factory" full_name="PhlyRestfully\Factory"/>
    <namespace name="Listener" full_name="PhlyRestfully\Listener"/>
    <namespace name="Plugin" full_name="PhlyRestfully\Plugin"/>
    <namespace name="View" full_name="PhlyRestfully\View"/>
  </namespace>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
